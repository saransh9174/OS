from flask import Flask, render_template
from flask_socketio import SocketIO, emit
import threading
import time

app = Flask(__name__, template_folder='templates')  # Specify the template folder
socketio = SocketIO(app)

progress = []
deadlock_detected = [False]

@app.route('/')
def index():
    return render_template('index.html')

def process1(lock1, lock2):
    print("Process 1: Attempting to acquire Lock 1...")
    lock1.acquire()
    print("Process 1: Acquired Lock 1, attempting Lock 2...")
    time.sleep(2)  # Simulate work
    if lock2.acquire(blocking=False):
        print("Process 1: Acquired Lock 1 and Lock 2")
        progress.append(1)  # Process 1 succeeded
    else:
        print("Process 1: Waiting for Lock 2...")
        deadlock_detected[0] = True

def process2(lock1, lock2):
    print("Process 2: Attempting to acquire Lock 2...")
    lock2.acquire()
    print("Process 2: Acquired Lock 2, attempting Lock 1...")
    time.sleep(2)  # Simulate work
    if lock1.acquire(blocking=False):
        print("Process 2: Acquired Lock 2 and Lock 1")
        progress.append(2)  # Process 2 succeeded
    else:
        print("Process 2: Waiting for Lock 1...")
        deadlock_detected[0] = True

def update_websocket():
    while not deadlock_detected[0]:
        socketio.sleep(1)
        emit('update', {'progress': progress, 'deadlock_detected': deadlock_detected[0]})

if __name__ == '__main__':
    lock1 = threading.Lock()
    lock2 = threading.Lock()

    thread1 = threading.Thread(target=process1, args=(lock1, lock2))
    thread2 = threading.Thread(target=process2, args=(lock1, lock2))
    update_thread = threading.Thread(target=update_websocket)

    thread1.start()
    thread2.start()
    update_thread.start()

    socketio.run(app, debug=True)
